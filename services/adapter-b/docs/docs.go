// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/analyze/entities": {
            "post": {
                "description": "Extract named entities from text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Extract entities",
                "parameters": [
                    {
                        "description": "Text to analyze",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "entities": {
                                    "type": "array"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/analyze/sentiment": {
            "post": {
                "description": "Analyze sentiment of the provided text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Analyze sentiment",
                "parameters": [
                    {
                        "description": "Text to analyze",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "confidence": {
                                    "type": "number"
                                },
                                "scores": {
                                    "type": "object"
                                },
                                "sentiment": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cache/stats": {
            "get": {
                "description": "Get cache performance statistics",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cache"
                ],
                "summary": "Get cache statistics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "cache_stats": {
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat/completions": {
            "post": {
                "description": "Generate chat completion with message history",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chat"
                ],
                "summary": "Chat completion",
                "parameters": [
                    {
                        "description": "Chat request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.ChatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.ChatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/classify": {
            "post": {
                "description": "Classify text into predefined categories",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analysis"
                ],
                "summary": "Classify text",
                "parameters": [
                    {
                        "description": "Classification request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categories": {
                                    "type": "array"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "all_scores": {
                                    "type": "object"
                                },
                                "category": {
                                    "type": "string"
                                },
                                "confidence": {
                                    "type": "number"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/complete": {
            "post": {
                "description": "Generate AI text completion using adapter B with advanced options",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "completion"
                ],
                "summary": "Generate text completion",
                "parameters": [
                    {
                        "description": "Completion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.completeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.completeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/completions/stream": {
            "post": {
                "description": "Generate streaming text completion",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "streaming"
                ],
                "summary": "Stream completion",
                "parameters": [
                    {
                        "description": "Streaming completion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/main.completeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server-sent events stream",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "description": "Get basic health status of adapter B",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "monitoring"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/load-balancer/status": {
            "get": {
                "description": "Get current load balancer status and node health",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "load-balancing"
                ],
                "summary": "Get load balancer status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.LoadBalancerInfo"
                        }
                    }
                }
            }
        },
        "/models/available": {
            "get": {
                "description": "Get list of all available AI models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "models"
                ],
                "summary": "Get available models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "models": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/stream/sessions": {
            "get": {
                "description": "Get list of active streaming sessions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "streaming"
                ],
                "summary": "Get streaming sessions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "active_count": {
                                    "type": "number"
                                },
                                "sessions": {
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/summarize": {
            "post": {
                "description": "Generate a summary of the provided text",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "processing"
                ],
                "summary": "Summarize text",
                "parameters": [
                    {
                        "description": "Summarization request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "max_length": {
                                    "type": "number"
                                },
                                "style": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "compression_ratio": {
                                    "type": "number"
                                },
                                "summary": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/translate": {
            "post": {
                "description": "Translate text between languages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "processing"
                ],
                "summary": "Translate text",
                "parameters": [
                    {
                        "description": "Translation request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "source_lang": {
                                    "type": "string"
                                },
                                "target_lang": {
                                    "type": "string"
                                },
                                "text": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "source_lang": {
                                    "type": "string"
                                },
                                "target_lang": {
                                    "type": "string"
                                },
                                "translated_text": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "main.ChatChoice": {
            "type": "object",
            "properties": {
                "finish_reason": {
                    "type": "string",
                    "example": "stop"
                },
                "index": {
                    "type": "integer",
                    "example": 0
                },
                "message": {
                    "$ref": "#/definitions/main.ChatMessage"
                }
            }
        },
        "main.ChatMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string",
                    "example": "Hello, how are you?"
                },
                "role": {
                    "description": "user, assistant, system",
                    "type": "string",
                    "example": "user"
                }
            }
        },
        "main.ChatRequest": {
            "type": "object",
            "properties": {
                "max_tokens": {
                    "type": "integer",
                    "example": 150
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ChatMessage"
                    }
                },
                "model": {
                    "type": "string",
                    "example": "adapter-b"
                },
                "stream": {
                    "type": "boolean",
                    "example": false
                },
                "temperature": {
                    "type": "number",
                    "example": 0.7
                }
            }
        },
        "main.ChatResponse": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.ChatChoice"
                    }
                },
                "created": {
                    "type": "integer",
                    "example": 1694876543
                },
                "id": {
                    "type": "string",
                    "example": "chat-123"
                },
                "model": {
                    "type": "string",
                    "example": "adapter-b"
                },
                "object": {
                    "type": "string",
                    "example": "chat.completion"
                },
                "usage": {
                    "$ref": "#/definitions/main.UsageInfo"
                }
            }
        },
        "main.LoadBalancerInfo": {
            "type": "object",
            "properties": {
                "active_nodes": {
                    "type": "integer",
                    "example": 4
                },
                "failover_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "load_distribution": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "node_health": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "total_nodes": {
                    "type": "integer",
                    "example": 5
                }
            }
        },
        "main.ResponseMetadata": {
            "type": "object",
            "properties": {
                "confidence": {
                    "type": "number",
                    "example": 0.92
                },
                "content_filtered": {
                    "type": "boolean",
                    "example": false
                },
                "custom_data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "finish_reason": {
                    "type": "string",
                    "example": "stop"
                },
                "model_version": {
                    "type": "string",
                    "example": "2.1.0"
                },
                "processing_time": {
                    "type": "string",
                    "example": "245ms"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "main.UsageInfo": {
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "type": "integer",
                    "example": 35
                },
                "prompt_tokens": {
                    "type": "integer",
                    "example": 15
                },
                "total_tokens": {
                    "type": "integer",
                    "example": 50
                }
            }
        },
        "main.completeRequest": {
            "type": "object",
            "properties": {
                "max_tokens": {
                    "type": "integer",
                    "example": 200
                },
                "model": {
                    "type": "string",
                    "example": "adapter-b"
                },
                "prompt": {
                    "type": "string",
                    "example": "Hello world"
                },
                "stop_sequences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stream": {
                    "type": "boolean",
                    "example": false
                },
                "system_prompt": {
                    "type": "string",
                    "example": "You are a helpful assistant"
                },
                "temperature": {
                    "type": "number",
                    "example": 0.8
                },
                "top_p": {
                    "type": "number",
                    "example": 0.95
                }
            }
        },
        "main.completeResponse": {
            "type": "object",
            "properties": {
                "completion": {
                    "type": "string",
                    "example": "B: Hello world response"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-09-16T10:30:00Z"
                },
                "metadata": {
                    "$ref": "#/definitions/main.ResponseMetadata"
                },
                "model": {
                    "type": "string",
                    "example": "adapter-b"
                },
                "request_id": {
                    "type": "string",
                    "example": "req-123"
                },
                "usage": {
                    "$ref": "#/definitions/main.UsageInfo"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "2.1.0",
	Host:             "",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "AI Adapter B API",
	Description:      "Advanced AI completion service adapter B with streaming, chat, and specialized processing",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
