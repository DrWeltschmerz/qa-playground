{
    "swagger": "2.0",
    "info": {
        "description": "API Gateway for QA Showcase with AI completion and user management",
        "title": "QA Showcase Gateway API",
        "contact": {},
        "version": "0.1.0"
    },
    "basePath": "/",
    "paths": {
        "/docs": {
            "get": {
                "description": "Lists all available API documentation",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "API Documentation Index",
                "responses": {
                    "200": {
                        "description": "HTML page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/unified": {
            "get": {
                "description": "Interactive browser for all APIs with spec switching",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "Unified API Browser",
                "responses": {
                    "200": {
                        "description": "HTML page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/docs/users/{path}": {
            "get": {
                "description": "Swagger UI for the Users API",
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "documentation"
                ],
                "summary": "Users API Swagger UI",
                "responses": {
                    "200": {
                        "description": "HTML page",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/healthz": {
            "get": {
                "description": "Returns the health status of the API",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/system/backup": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Starts a new system backup and returns backup metadata",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Create backup",
                "parameters": [
                    {
                        "description": "Backup options",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AdminCreateBackupRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/routes.BackupEntry"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/admin/system/backup/{backupId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns status for a given backup ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get backup status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Backup ID",
                        "name": "backupId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.BackupEntry"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/admin/system/backups": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Lists existing backups with optional filters",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "List backups",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Backup type filter",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Status filter",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "default": "desc",
                        "description": "Sort order (asc|desc)",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.BackupListResponse"
                        }
                    }
                }
            }
        },
        "/v1/admin/system/config": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the current system configuration settings",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get system configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AdminSystemConfig"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Partially update system configuration (performance, security, features)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Update system configuration",
                "parameters": [
                    {
                        "description": "Configuration patch",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AdminConfigPatch"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AdminUpdateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/admin/system/maintenance": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Enable or disable system maintenance with validation",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Set maintenance mode",
                "parameters": [
                    {
                        "description": "Maintenance settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AdminMaintenanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/admin/system/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns overall system health, services, resources, and versions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Get system status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AdminSystemStatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/ai/batch": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Accepts a batch completion request and returns a job id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "Batch AI completion",
                "parameters": [
                    {
                        "description": "Batch request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.AiBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/routes.AiBatchAccepted"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/ai/complete": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Generate text completion using specified AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "AI text completion",
                "parameters": [
                    {
                        "description": "Completion request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "model": {
                                    "type": "string"
                                },
                                "prompt": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "completion": {
                                    "type": "string"
                                },
                                "model": {
                                    "type": "string"
                                },
                                "traceId": {
                                    "type": "string"
                                },
                                "usage": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "502": {
                        "description": "Bad Gateway",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/ai/jobs/{jobId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns the status and results for a batch completion job",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "AI job status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job ID",
                        "name": "jobId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AiJobStatusResponse"
                        }
                    }
                }
            }
        },
        "/v1/ai/metrics": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns overall metrics for AI models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "AI metrics",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AiMetricsResponse"
                        }
                    }
                }
            }
        },
        "/v1/ai/models": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns available AI models and capabilities",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "List AI models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AiModelsResponse"
                        }
                    }
                }
            }
        },
        "/v1/ai/models/{model}/configure": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Updates configuration settings for a specific AI model",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "Configure AI model",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Configuration settings",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AiGenericMessageResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/ai/models/{model}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns health and status for a specific AI model",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ai"
                ],
                "summary": "Get AI model status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Model name",
                        "name": "model",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AiModelStatusResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/analytics/errors": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns aggregated error stats, supports filters and trends",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get error analytics",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Filter by status code",
                        "name": "status_code",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Endpoint filter",
                        "name": "endpoint",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include trend series",
                        "name": "include_trends",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Grouping: hour|day|week",
                        "name": "group_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Limit recent errors",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/analytics/events/batch": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Accepts multiple analytics events in a single request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Track batch analytics events",
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/analytics/performance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns response time distribution, throughput, and error rates",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get performance metrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Endpoint filter",
                        "name": "endpoint",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Include trend series",
                        "name": "include_trends",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "Check thresholds",
                        "name": "check_thresholds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/analytics/usage": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns usage analytics with optional date range, endpoint filter, and grouping",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "analytics"
                ],
                "summary": "Get usage analytics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RFC3339 start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RFC3339 end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Endpoint filter",
                        "name": "endpoint",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Grouping: hour|day|week",
                        "name": "group_by",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/audit/logs": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit"
                ],
                "summary": "List audit logs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by user ID",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by action",
                        "name": "action",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by resource type",
                        "name": "resource_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RFC3339 start",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RFC3339 end",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field (timestamp)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc|desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit"
                ],
                "summary": "Create audit log",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/routes.AuditLog"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/audit/logs/{logId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "audit"
                ],
                "summary": "Get audit log by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Audit Log ID",
                        "name": "logId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.AuditLog"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notifications": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Returns notifications with filters, pagination, and sorting",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "List notifications",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by recipient",
                        "name": "recipient",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by priority",
                        "name": "priority",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search text",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RFC3339 start date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "RFC3339 end date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc|desc",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Create notification",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/routes.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notifications/{notificationId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Get notification by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Notification"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Update notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Notification"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notifications/{notificationId}/read": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Mark notification as read",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Notification"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/notifications/{notificationId}/unread": {
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Clears read status for a notification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "notifications"
                ],
                "summary": "Mark notification as unread",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Notification ID",
                        "name": "notificationId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Notification"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "List workflows",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by name contains",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort field: created_at|name",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc|desc",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Items per page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Create workflow",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/routes.Workflow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows/{workflowId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Get workflow by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflowId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Workflow"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Update workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflowId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.Workflow"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows/{workflowId}/approve": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Approve workflow step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflowId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows/{workflowId}/execute": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Execute workflow",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflowId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows/{workflowId}/reject": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Reject workflow step",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflowId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/v1/workflows/{workflowId}/status": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    },
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "workflows"
                ],
                "summary": "Get workflow status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Workflow ID",
                        "name": "workflowId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "routes.AdminApplicationConfig": {
            "type": "object",
            "properties": {
                "environment": {
                    "type": "string",
                    "example": "test"
                },
                "name": {
                    "type": "string",
                    "example": "QA Playwright Gateway"
                },
                "version": {
                    "type": "string",
                    "example": "0.1.0"
                }
            }
        },
        "routes.AdminConfigPatch": {
            "type": "object",
            "properties": {
                "features": {
                    "$ref": "#/definitions/routes.AdminConfigPatchFeatures"
                },
                "performance": {
                    "$ref": "#/definitions/routes.AdminConfigPatchPerformance"
                },
                "security": {
                    "$ref": "#/definitions/routes.AdminConfigPatchSecurity"
                }
            }
        },
        "routes.AdminConfigPatchFeatures": {
            "type": "object",
            "properties": {
                "analytics_enabled": {
                    "type": "boolean"
                },
                "audit_logging": {
                    "type": "boolean"
                },
                "notifications_enabled": {
                    "type": "boolean"
                }
            }
        },
        "routes.AdminConfigPatchPerformance": {
            "type": "object",
            "properties": {
                "cache_ttl": {
                    "type": "integer",
                    "example": 1200
                },
                "max_connections": {
                    "type": "integer",
                    "example": 200
                },
                "request_timeout": {
                    "type": "integer",
                    "example": 20000
                }
            }
        },
        "routes.AdminConfigPatchSecurity": {
            "type": "object",
            "properties": {
                "rate_limit_requests": {
                    "type": "integer",
                    "example": 300
                },
                "rate_limit_window": {
                    "type": "integer",
                    "example": 60
                }
            }
        },
        "routes.AdminCreateBackupRequest": {
            "type": "object",
            "properties": {
                "backup_type": {
                    "type": "string",
                    "example": "full"
                },
                "compression": {
                    "type": "boolean",
                    "example": true
                },
                "description": {
                    "type": "string",
                    "example": "nightly"
                },
                "include_configuration": {
                    "type": "boolean",
                    "example": true
                },
                "include_database": {
                    "type": "boolean",
                    "example": true
                },
                "include_files": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "routes.AdminDatabaseConfig": {
            "type": "object",
            "properties": {
                "connection_string": {
                    "type": "string",
                    "example": "file::memory:?cache=shared"
                },
                "max_connections": {
                    "type": "integer",
                    "example": 25
                },
                "type": {
                    "type": "string",
                    "example": "sqlite"
                }
            }
        },
        "routes.AdminFeaturesConfig": {
            "type": "object",
            "properties": {
                "analytics_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "audit_logging": {
                    "type": "boolean",
                    "example": true
                },
                "notifications_enabled": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "routes.AdminLoggingConfig": {
            "type": "object",
            "properties": {
                "level": {
                    "type": "string",
                    "example": "info"
                }
            }
        },
        "routes.AdminMaintenanceRequest": {
            "type": "object",
            "properties": {
                "allowed_ips": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "127.0.0.1"
                    ]
                },
                "completion_message": {
                    "type": "string",
                    "example": "Upgrade done"
                },
                "contact_info": {
                    "type": "string",
                    "example": "ops@example.com"
                },
                "enabled": {
                    "type": "boolean",
                    "example": true
                },
                "estimated_duration": {
                    "type": "integer",
                    "example": 120
                },
                "maintenance_type": {
                    "type": "string",
                    "example": "scheduled"
                },
                "message": {
                    "type": "string",
                    "example": "Upgrading database"
                }
            }
        },
        "routes.AdminNetworkIO": {
            "type": "object",
            "properties": {
                "rx": {
                    "type": "integer",
                    "example": 12345
                },
                "tx": {
                    "type": "integer",
                    "example": 9876
                }
            }
        },
        "routes.AdminPerformanceCacheSettings": {
            "type": "object",
            "properties": {
                "cache_ttl": {
                    "type": "integer",
                    "example": 600
                }
            }
        },
        "routes.AdminPerformanceConfig": {
            "type": "object",
            "properties": {
                "cache_settings": {
                    "$ref": "#/definitions/routes.AdminPerformanceCacheSettings"
                },
                "max_connections": {
                    "type": "integer",
                    "example": 100
                },
                "timeout_settings": {
                    "$ref": "#/definitions/routes.AdminPerformanceTimeoutSettings"
                }
            }
        },
        "routes.AdminPerformanceTimeoutSettings": {
            "type": "object",
            "properties": {
                "request_timeout": {
                    "type": "integer",
                    "example": 15000
                }
            }
        },
        "routes.AdminSecurityConfig": {
            "type": "object",
            "properties": {
                "cors_enabled": {
                    "type": "boolean",
                    "example": true
                },
                "jwt_expiry": {
                    "type": "integer",
                    "example": 3600
                },
                "rate_limit_requests": {
                    "description": "Flattened fields some tests read at top-level",
                    "type": "integer",
                    "example": 200
                },
                "rate_limit_window": {
                    "type": "integer",
                    "example": 60
                },
                "rate_limiting": {
                    "$ref": "#/definitions/routes.AdminSecurityRateLimiting"
                }
            }
        },
        "routes.AdminSecurityRateLimiting": {
            "type": "object",
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "example": true
                },
                "rate_limit_requests": {
                    "type": "integer",
                    "example": 200
                },
                "rate_limit_window": {
                    "type": "integer",
                    "example": 60
                }
            }
        },
        "routes.AdminSystemConfig": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/routes.AdminApplicationConfig"
                },
                "database": {
                    "$ref": "#/definitions/routes.AdminDatabaseConfig"
                },
                "features": {
                    "$ref": "#/definitions/routes.AdminFeaturesConfig"
                },
                "logging": {
                    "$ref": "#/definitions/routes.AdminLoggingConfig"
                },
                "performance": {
                    "$ref": "#/definitions/routes.AdminPerformanceConfig"
                },
                "security": {
                    "$ref": "#/definitions/routes.AdminSecurityConfig"
                }
            }
        },
        "routes.AdminSystemStatusDatabase": {
            "type": "object",
            "properties": {
                "connections": {
                    "type": "integer",
                    "example": 3
                },
                "response_time": {
                    "type": "integer",
                    "example": 12
                },
                "status": {
                    "type": "string",
                    "example": "healthy"
                }
            }
        },
        "routes.AdminSystemStatusResources": {
            "type": "object",
            "properties": {
                "cpu_usage": {
                    "type": "number",
                    "example": 0.35
                },
                "disk_usage": {
                    "type": "number",
                    "example": 0.4
                },
                "memory_usage": {
                    "type": "number",
                    "example": 0.55
                },
                "network_io": {
                    "$ref": "#/definitions/routes.AdminNetworkIO"
                }
            }
        },
        "routes.AdminSystemStatusResponse": {
            "type": "object",
            "properties": {
                "adapter_statuses": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "database": {
                    "$ref": "#/definitions/routes.AdminSystemStatusDatabase"
                },
                "external_dependencies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "gateway_status": {
                    "type": "object",
                    "additionalProperties": true
                },
                "overall_status": {
                    "type": "string",
                    "example": "healthy"
                },
                "services": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/routes.AdminSystemStatusServices"
                    }
                },
                "system_resources": {
                    "$ref": "#/definitions/routes.AdminSystemStatusResources"
                },
                "timestamp": {
                    "type": "string",
                    "example": "2025-09-17T12:00:00Z"
                },
                "uptime": {
                    "type": "string",
                    "example": "72h"
                },
                "version": {
                    "type": "string",
                    "example": "0.1.0"
                }
            }
        },
        "routes.AdminSystemStatusServices": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "healthy"
                }
            }
        },
        "routes.AdminUpdateResponse": {
            "type": "object",
            "properties": {
                "applied_at": {
                    "type": "string",
                    "example": "2025-09-17T12:00:00Z"
                },
                "restart_required": {
                    "type": "boolean",
                    "example": false
                },
                "updated_settings": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "routes.AiBatchAccepted": {
            "type": "object",
            "properties": {
                "estimated_completion": {
                    "type": "string",
                    "example": "2-5 minutes"
                },
                "job_id": {
                    "type": "string",
                    "example": "job_abc123"
                },
                "status": {
                    "type": "string",
                    "example": "queued"
                }
            }
        },
        "routes.AiBatchRequest": {
            "type": "object",
            "properties": {
                "callback_url": {
                    "type": "string",
                    "example": "https://example.com/callback"
                },
                "model": {
                    "type": "string",
                    "example": "adapter-a"
                },
                "requests": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "routes.AiGenericMessageResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "model configured successfully"
                },
                "model": {
                    "type": "string",
                    "example": "adapter-a"
                }
            }
        },
        "routes.AiJobResult": {
            "type": "object",
            "properties": {
                "completion": {
                    "type": "string",
                    "example": "Sample completion for first prompt"
                },
                "index": {
                    "type": "integer",
                    "example": 0
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "routes.AiJobStatusResponse": {
            "type": "object",
            "properties": {
                "completed_at": {
                    "type": "string",
                    "example": "2025-09-17T12:03:00Z"
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-09-17T12:00:00Z"
                },
                "job_id": {
                    "type": "string",
                    "example": "job_abc123"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.AiJobResult"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "completed"
                }
            }
        },
        "routes.AiMetricsModel": {
            "type": "object",
            "properties": {
                "avg_latency": {
                    "type": "string",
                    "example": "130ms"
                },
                "requests": {
                    "type": "integer",
                    "example": 2710
                }
            }
        },
        "routes.AiMetricsResponse": {
            "type": "object",
            "properties": {
                "metrics": {
                    "type": "object",
                    "properties": {
                        "avg_response_time": {
                            "type": "string",
                            "example": "145ms"
                        },
                        "failed_requests": {
                            "type": "integer",
                            "example": 40
                        },
                        "models": {
                            "type": "object",
                            "additionalProperties": {
                                "$ref": "#/definitions/routes.AiMetricsModel"
                            }
                        },
                        "successful_requests": {
                            "type": "integer",
                            "example": 5380
                        },
                        "total_requests": {
                            "type": "integer",
                            "example": 5420
                        }
                    }
                }
            }
        },
        "routes.AiModel": {
            "type": "object",
            "properties": {
                "max_tokens": {
                    "type": "integer",
                    "example": 4096
                },
                "name": {
                    "type": "string",
                    "example": "adapter-a"
                },
                "status": {
                    "type": "string",
                    "example": "active"
                },
                "type": {
                    "type": "string",
                    "example": "text-completion"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                }
            }
        },
        "routes.AiModelHealth": {
            "type": "object",
            "properties": {
                "avg_latency": {
                    "type": "string",
                    "example": "150ms"
                },
                "errors": {
                    "type": "integer",
                    "example": 3
                },
                "memory_usage": {
                    "type": "string",
                    "example": "512MB"
                }
            }
        },
        "routes.AiModelStatusInfo": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string",
                    "example": "online"
                },
                "uptime": {
                    "type": "string",
                    "example": "99.99%"
                }
            }
        },
        "routes.AiModelStatusResponse": {
            "type": "object",
            "properties": {
                "health": {
                    "$ref": "#/definitions/routes.AiModelHealth"
                },
                "model": {
                    "type": "string",
                    "example": "adapter-a"
                },
                "status": {
                    "$ref": "#/definitions/routes.AiModelStatusInfo"
                }
            }
        },
        "routes.AiModelsResponse": {
            "type": "object",
            "properties": {
                "models": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.AiModel"
                    }
                }
            }
        },
        "routes.AuditLog": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "details": {
                    "description": "Ensure these keys are always present in JSON responses",
                    "type": "object",
                    "additionalProperties": {}
                },
                "event_type": {
                    "description": "Optional additional fields used by integration tests",
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "ip_address": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "resource_id": {
                    "type": "string"
                },
                "resource_type": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "routes.BackupEntry": {
            "type": "object",
            "properties": {
                "backup_id": {
                    "type": "string",
                    "example": "backup-1a2b3c4d"
                },
                "backup_type": {
                    "type": "string",
                    "example": "full"
                },
                "completed_at": {
                    "type": "string",
                    "example": "2025-09-17T12:03:00Z"
                },
                "compression": {
                    "type": "boolean",
                    "example": true
                },
                "created_at": {
                    "type": "string",
                    "example": "2025-09-17T12:00:00Z"
                },
                "download_url": {
                    "type": "string",
                    "example": "/downloads/backup-1a2b3c4d.tar.gz"
                },
                "estimated_completion": {
                    "type": "string",
                    "example": "2025-09-17T12:02:00Z"
                },
                "file_size": {
                    "type": "integer",
                    "example": 1048576
                },
                "progress": {
                    "type": "integer",
                    "example": 42
                },
                "started_at": {
                    "type": "string",
                    "example": "2025-09-17T12:00:00Z"
                },
                "status": {
                    "type": "string",
                    "example": "in_progress"
                }
            }
        },
        "routes.BackupListResponse": {
            "type": "object",
            "properties": {
                "backups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.BackupEntry"
                    }
                },
                "storage_usage": {
                    "type": "integer",
                    "example": 1048576
                },
                "total": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "routes.Notification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "priority": {
                    "type": "string"
                },
                "read_at": {
                    "type": "string"
                },
                "read_by": {
                    "type": "string"
                },
                "recipient": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "routes.Workflow": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_step": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "execution_history": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "id": {
                    "type": "string"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "steps": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/routes.WorkflowStep"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "routes.WorkflowStep": {
            "type": "object",
            "properties": {
                "depends_on": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "x-api-key",
            "in": "header"
        },
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}